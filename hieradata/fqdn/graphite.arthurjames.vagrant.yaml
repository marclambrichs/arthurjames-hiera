---
arthurjames::notify::message: This is graphite.arthurjames.vagrant

classes:
  - arthurjames::role_node
  - arthurjames::role_graphite

### Roles
arthurjames::role_graphite::collectd_enabled: true
arthurjames::role_graphite::grafana_enabled: true
arthurjames::role_graphite::graphite_enabled: true
arthurjames::role_graphite::logrotate_enabled: true
arthurjames::role_graphite::memcached_enabled: true
arthurjames::role_graphite::postgresql_enabled: true
arthurjames::role_graphite::relay_enabled: true

### Modules
ntp::servers:
  - ntp.xs4all.nl
  - ntp2.xs4all.nl

apache::default_vhost: false
apache::apache_version: '2.4'

arthurjames::profile_postgresql::databases:
  grafana:
    password: 'changeme'
    user: 'grafana'
arthurjames::profile_postgresql::datadir: '/var/lib/pgsql/data'

arthurjames::profile_grafana::db_datadir: '/var/lib/pgsql/data'
arthurjames::profile_grafana::db_host: '127.0.0.1:5432'
arthurjames::profile_grafana::db_name: 'grafana'
arthurjames::profile_grafana::db_user: 'grafana'
arthurjames::profile_grafana::db_password: 'changeme'

arthurjames::profile_graphite::vhosts:
  graphite.arthurjames.vagrant:
    access_logs:
      - file: "/var/log/httpd/%{::hostname}.access.log"
        format: combined
    serveraliases:
      - 'graphite2.arthurjames.vagrant'
    docroot: '/usr/share/graphite/webapp'
    redirect_dest: "https://%{::fqdn}/"
    redirect_status: 'permanent'
    directories:
      - provider: 'location'
        path: '/server-status'
        sethandler: 'server-status'
        require: 'ip 127.0.0.1'
    error_log_file: "%{::hostname}.error.log"
  ssl-graphite.arthurjames.vagrant:
    access_logs:
      - file: "/var/log/httpd/%{hostname}.ssl.access.log"
        format: combined
    directories:
      - auth_basic_provider: 'file'
#        auth_basic_provider: 'file ldap'
        auth_name: 'userid'
        auth_type: 'Basic'
        auth_user_file: '/etc/graphite-web/htaccess'
#        custom_fragment: |
  #AuthLDAPURL "ldaps://%{name}/ou=People, o=ing"
  #<LimitExcept OPTIONS>
  #  Require valid-user
  #</LimitExcept>
        path: '/usr/share/graphite'
        provider: 'directory'
        sethandler: 'None'
      - path: '/content/'
        provider: 'location'
        sethandler: 'None'
      - path: '/media/'
        provider: 'location'
        sethandler: 'None'
      - path: '/admin/'
        provider: 'location'
        require: 'ip 127.0.0.1'
    docroot: '/usr/share/graphite/webapp'
    error_log_file: "%{::hostname}.ssl.error.log"
    headers:
      - 'always set X-Content-Type-Options nosniff'
#      - 'always set Access-Control-Allow-Origin %%{EMPTY}{AccessControlAllowOrigin} env=AccessControlAllowOrigin'
      - 'always set Access-Control-Allow-Origin "*"'
      - 'always set Access-Control-Allow-Methods "DELETE, PUT, GET, POST, OPTIONS"'
      - 'always set Access-Control-Allow-Headers "origin, accept, X-Requested-With, Content-Type, authorization"'
      - 'always set Access-Control-Allow-Credentials true'
    port: 443
    serveraliases:
      - 'ssl-graphite2.arthurjames.vagrant'
    ssl: true
    ssl_cert: '/etc/pki/tls/certs/%{::fqdn}.crt'
    ssl_key: '/etc/pki/tls/private/%{::fqdn}.key.nopass'
    wsgi_application_group: '%%{EMPTY}{GLOBAL}'
    wsgi_daemon_process: 'graphite'
    wsgi_daemon_process_options:
      processes: 8
      threads: 5
      display-name: '"%%{EMPTY}{GROUP}"'
      inactivity-timeout: 120
    wsgi_import_script: '/usr/share/graphite/graphite-web.wsgi'
    wsgi_import_script_options:
      process-group: 'graphite'
      application-group: '%%{EMPTY}{GLOBAL}'
    wsgi_process_group: 'graphite'
    wsgi_script_aliases:
      /: '/usr/share/graphite/graphite-web.wsgi'

### Profiles
arthurjames::profile_relay::relay_type: 'carbon-c-relay'

arthurjames::profile_collectd::plugin_genericjmx: true
arthurjames::profile_collectd::plugin_genericjmx_mbean_params:
  garbage_collector:
    object_name: 'java.lang:type=GarbageCollector,*'
    instance_prefix: 'gc-'
    instance_from: 'name'
    values:
      - type: 'invocations'
        table: false
        attribute: 'CollectionCount'
      - type: 'total_time_in_ms'
        instance_prefix: 'collection_time'
        table: false
        attribute: 'CollectionTime'
arthurjames::profile_collectd::plugin_genericjmx_connection_params:
  java_app:
    host: "%{::fqdn}"
    service_url: 'service:jmx:rmi:///jndi/rmi://localhost:3637/jmxrmi'
    collect:
      - 'memory-heap'
      - 'memory-nonheap'
      - 'garbage_collector'

arthurjames::profile_graphite::carbon_caches:
  a:
    cache_query_port: 7002
    line_receiver_port: 2203
    pickle_receiver_port: 2204
    udp_receiver_port: 2203 
  b:
    cache_query_port: 7003
    line_receiver_port: 2303
    udp_receiver_port: 2303 
    pickle_receiver_port: 2304
    
carbon_c_relay::config_clusters:
  localhost:
    replication_factor: 1
    channel: 'carbon_ch'
    hosts:
      - host: 'localhost'
        port: 2203
        alias: 'a'
      - host: 'localhost'
        port: 2303
        alias: 'b'
#  d.arthurjames.vagrant:
#    replication_factor: 1
#    channel: 'carbon_ch'
#    hosts:
#      - host: 'd.arthurjames.vagrant'
#        port: 2203
#        alias: 'a'
#      - host: 'd.arthurjames.vagrant'
#        port: 2303
#        alias: 'b'
#      - host: 'd.arthurjames.vagrant'
#        port: 2403
#        alias: 'c'
#      - host: 'd.arthurjames.vagrant'
#        port: 2503
#        alias: 'd'
#      - host: 'd.arthurjames.vagrant'
#        port: 2603
#        alias: 'e'
#      - host: 'd.arthurjames.vagrant'
#        port: 2703
#        alias: 'f'
  local_file:
    file: '/tmp/ccr.log'
carbon_c_relay::config_matches:
  '*':
    cluster_name: 'localhost'
    stop: true
carbon_c_relay::config_rewrites:
  rewrite1:
    comments: |
      ## rewrite carbon c relay internal statistics
      ## from carbon.relays.twiki501.back.test.bc.local.metricsQueued
      ## into bc.test.twiki.twiki501.relay.metricsQueued
    from: '^carbon\.relays\.([a-zA-Z]+)([0-9]*)_([a-zA-Z0-9]+)_([a-zA-Z0-9]+))\.(.*)'
    into: '\2_\3.\1.relay.\4'
  rewrite3:
    comments: |
      ## rewrite metrics from statsite
      ## from sandbox.test.twiki.twiki001.statsite.gauges.gunicorn.workers
      ## from twiki001.back.test.sandbox.local.statsite.gauges.gunicorn.workers
      ## into sandbox.test.twiki.twiki001.statsite.gunicorn.gauges.workers
    from: '^([a-zA-Z0-9]+)\.([a-zA-Z0-9]+)\.([a-zA-Z0-9]+)\.([a-zA-Z]+)([0-9]+)\.statsite\.([a-zA-Z]+)\.([a-zA-Z]+)\.(.*)'
    into: '\1.\2.\3.\4\5.statsite.\7.\6.\8'
  rewrite4:
    comments: |
      ## clean up statsite numstats metric
      ## from sandbox.test.twiki.twiki001.statsite.counts.numStats
      ## into sandbox.test.twiki.twiki001.statsite.numStats
    from: '^([a-zA-Z0-9]+)\.([a-zA-Z0-9]+)\.([a-zA-Z0-9]+)\.([a-zA-Z]+)([0-9]+)\.statsite\.counts\.(.*)'
    into: '\1.\2.\3.\4\5.statsite.\6'
